!async function(){const{pathname:a}=location;(a.endsWith(".html")||a.endsWith(".html/"))&&location.replace("/");const s=document.getElementById("root");s.innerHTML='<h1 class="text-center p-8 text-lg text-gray-500 dark:text-gray-300">Loading...</h1>';const t=await fetch(a+"/view-data"),{data:e}=await t.json();t.ok?e&&(document.title=e.title,s.innerHTML=`\n          <div class="container mx-auto p-6 dark:bg-gray-900 dark:text-white">\n            <div class="card-wrapper mt-4">\n              ${e.routesView.map((a=>`\n                    <div class="card bg-gray-100 dark:bg-gray-800 p-4 rounded-lg shadow-md mt-2">\n                      <h4 class="text-lg font-semibold">${a.title}</h4>\n                      <p class="text-sm"><span class="font-bold">Get</span> : <a href="${e.baseUrlPath+a.route}" target="_blank" class="text-blue-500 dark:text-blue-400 underline">${e.baseUrlPath+a.route}</a></p>\n                      <p class="text-sm"><span class="font-bold">Route Params</span> : <span class="text-gray-500">${a.routeParams?.length>0?"":"none"}</span></p>\n                      ${a.routeParams?.length>0?a.routeParams.map((a=>`\n                              <p data-spasi="1" class="text-sm"><span class="font-bold">Placeholder</span> : <span class="text-gray-400">${a.placeholder}</span></p>\n                              <p data-spasi="1" class="text-sm"><span class="font-bold">Value</span> :</p>\n                              <p data-spasi="2" class="text-sm"><span class="font-bold">Type</span> : <span class="text-gray-400">${a.value.type}</span></p>\n                              <p data-spasi="2" class="text-sm"><span class="font-bold">Default Value</span> : <span class="text-gray-400">${a.value.default?a.value.default:"none"}</span></p>\n                              <p data-spasi="2" class="text-sm"><span class="font-bold">Required</span> : <span class="text-gray-400">${a.value.required?"Yes":"No"}</span></p>\n                            `)).join(""):""}\n                      <p class="text-sm"><span class="font-bold">Query Params</span> : <span class="text-gray-500">${a.queryParams&&a.queryParams.length>0?"":"none"}</span></p>\n                      ${a.queryParams?.length>0?a.queryParams.map((a=>`\n                                <p data-spasi="1" class="text-sm"><span class="font-bold">Key</span> : <span class="text-gray-400">${a.key}</span></p>\n                                <p data-spasi="1" class="text-sm"><span class="font-bold">Value</span> :</p>\n                                <p data-spasi="2" class="text-sm"><span class="font-bold">Type</span> : <span class="text-gray-400">${a.value.type}</span></p>\n                                <p data-spasi="2" class="text-sm"><span class="font-bold">Default Value</span> : <span class="text-gray-400">${a.value.default?a.value.default:"none"}</span></p>\n                                <p data-spasi="2" class="text-sm"><span class="font-bold">Required</span> : <span class="text-gray-400">${a.value.required?"Yes":"No"}</span></p>\n                              `)).join(""):""}\n                    </div>\n                  `)).join("")}\n            </div>\n          </div>\n        `,document.querySelectorAll("[data-spasi]").forEach((a=>{const s=a.dataset.spasi,t=a.querySelector(".dot");let e=255-50*Number(s);e<0&&(e=0),t.style.backgroundColor=`rgb(${e}, ${e}, ${e})`,a.style.paddingLeft=s+"rem"}))):s.innerHTML=`<h1 class="text-center p-8 text-lg text-red-500 dark:text-red-400">${t.status} ${t.statusText}</h1>`}();